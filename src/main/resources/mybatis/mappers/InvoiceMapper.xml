<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.accp.procurement.mapper.InvoiceMapper">
    <resultMap id="BaseResultMap" type="org.accp.procurement.entity.Invoice">
        <id column="ID" jdbcType="INTEGER" property="id"/>
        <result column="Purchaseq_No" jdbcType="VARCHAR" property="purchaseqNo"/>
        <result column="Product_No" jdbcType="VARCHAR" property="productNo"/>
        <result column="Product_Name" jdbcType="VARCHAR" property="productName"/>
        <result column="Supplier_No" jdbcType="VARCHAR" property="supplierNo"/>
        <result column="Supplier_Name" jdbcType="VARCHAR" property="supplierName"/>
        <result column="ShouldInvoiceMoney" jdbcType="DECIMAL" property="shouldinvoicemoney"/>
        <result column="InvoiceMoney" jdbcType="DECIMAL" property="invoicemoney"/>
        <result column="Registrant" jdbcType="VARCHAR" property="registrant"/>
        <result column="RegistrantTime" jdbcType="TIMESTAMP" property="registranttime"/>
        <result column="auditor" jdbcType="VARCHAR" property="auditor"/>
        <result column="auditorTime" jdbcType="TIMESTAMP" property="auditorTime"/>
        <result column="CheckMark" jdbcType="VARCHAR" property="checkMark"/>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from invoice
        where ID = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="org.accp.procurement.entity.Invoice">
        insert into invoice (ID, Purchaseq_No, Product_No,
                             Product_Name, Supplier_No, Supplier_Name,
                             ShouldInvoiceMoney, InvoiceMoney, Registrant,
                             RegistrantTime, auditor, auditorTime,CheckMark)
        values (null, #{purchaseqNo,jdbcType=VARCHAR}, #{productNo,jdbcType=VARCHAR},
                #{productName,jdbcType=VARCHAR}, #{supplierNo,jdbcType=VARCHAR}, #{supplierName,jdbcType=VARCHAR},
                #{shouldinvoicemoney,jdbcType=DECIMAL}, #{invoicemoney,jdbcType=DECIMAL},
                #{registrant,jdbcType=VARCHAR},
                #{registranttime,jdbcType=TIMESTAMP}, #{auditor,jdbcType=VARCHAR}, #{auditorTime,jdbcType=TIMESTAMP}
                ,#{checkMark,jdbcType=VARCHAR}
                )
    </insert>
    <update id="updateByPrimaryKey" parameterType="org.accp.procurement.entity.Invoice">
        update invoice
        set Purchaseq_No       = #{purchaseqNo,jdbcType=VARCHAR},
            Product_No         = #{productNo,jdbcType=VARCHAR},
            Product_Name       = #{productName,jdbcType=VARCHAR},
            Supplier_No        = #{supplierNo,jdbcType=VARCHAR},
            Supplier_Name      = #{supplierName,jdbcType=VARCHAR},
            ShouldInvoiceMoney = #{shouldinvoicemoney,jdbcType=DECIMAL},
            InvoiceMoney       = #{invoicemoney,jdbcType=DECIMAL},
            Registrant         = #{registrant,jdbcType=VARCHAR},
            RegistrantTime     = #{registranttime,jdbcType=TIMESTAMP},
            auditor            = #{auditor,jdbcType=VARCHAR},
            auditorTime        = #{auditorTime,jdbcType=TIMESTAMP},
            CheckMark          = #{checkMark,jdbcType=VARCHAR}
        where ID = #{id,jdbcType=INTEGER}
    </update>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select ID,
               Purchaseq_No,
               Product_No,
               Product_Name,
               Supplier_No,
               Supplier_Name,
               ShouldInvoiceMoney,
               InvoiceMoney,
               Registrant,
               RegistrantTime,
               auditor,
               auditorTime,
               CheckMark
        from invoice
        where ID = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        select ID,
               Purchaseq_No,
               Product_No,
               Product_Name,
               Supplier_No,
               Supplier_Name,
               ShouldInvoiceMoney,
               InvoiceMoney,
               Registrant,
               RegistrantTime,
               auditor,
               auditorTime,
               CheckMark
        from invoice
    </select>

    <select id="selectCheck" resultMap="BaseResultMap">
        select ID,
               Purchaseq_No,
               Product_No,
               Product_Name,
               Supplier_No,
               Supplier_Name,
               ShouldInvoiceMoney,
               InvoiceMoney,
               Registrant,
               RegistrantTime,
               auditor,
               auditorTime,
               CheckMark
        from invoice where checkMark='未审核' OR ShouldInvoiceMoney>InvoiceMoney
    </select>

    <select id="selCheckcount" resultType="int">
        SELECT COUNT(*) FROM  invoice WHERE checkMark='未审核'
    </select>
    
    <select id="ingCount" resultType="int">
        SELECT COUNT(*) FROM  `invoice` WHERE InvoiceMoney>0
        AND ShouldInvoiceMoney>InvoiceMoney
    </select>

    <select id="overCount" resultType="int">
        SELECT COUNT(*) FROM  `invoice` WHERE InvoiceMoney=ShouldInvoiceMoney
    </select>

    <select id="UnpaidCount" resultType="int">
        SELECT COUNT(*) FROM  `invoice` WHERE InvoiceMoney=0
    </select>

    <select id="selInvoiceBydto" resultMap="BaseResultMap" parameterType="org.accp.procurement.dto.InvoiceDto">
        SELECT * FROM invoice
        <where>
            <if test="purchaseqNo!=null and purchaseqNo!=''">
                AND Purchaseq_No=#{purchaseqNo}
            </if>
            <if test="productName!=null and productName!=''">
                AND Product_Name LIKE CONCAT('%',#{productName},'%')
            </if>
            <if test="type=='支出发票完成'">
                AND InvoiceMoney=ShouldInvoiceMoney
            </if>
            <if test="type=='未支出发票'">
                AND InvoiceMoney=0
            </if>
            <if test="type=='正在支出发票'">
                AND InvoiceMoney>0 AND InvoiceMoney>ShouldInvoiceMoney
            </if>

            <if test="Starttime!=null and Starttime!='' and Endtime!=null and Endtime!='' ">
                AND RegistrantTime BETWEEN DATE(#{Starttime,jdbcType=TIMESTAMP}) AND DATE(#{Endtime,jdbcType=TIMESTAMP})
            </if>

        </where>
    </select>
</mapper>